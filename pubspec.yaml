name: flutter_study_demo
description: I'm study flutter demo

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.12.0 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # 国际化
  flutter_localizations:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  animations: ^2.0.1
  flutter_swiper_null_safety: ^1.0.2
  http: ^0.13.3
  shared_preferences: ^2.0.6
  flutter_staggered_grid_view: ^0.4.0
  webview_flutter: ^2.0.10
  keyboard_actions: ^3.4.3
  provider: ^6.0.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_native_splash: ^1.2.1 # 启动图插件

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^1.0.0



# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
      - images/new_home_tabbar_press.png
      - images/new_home_tabbar.png
      - images/new_video_tabbar_press.png
      - images/new_video_tabbar.png
      - images/new_long_video_tabbar_press.png
      - images/new_long_video_tabbar.png
      - images/new_mine_tabbar_press.png
      - images/new_mine_tabbar.png
      - images/type_channelgroup.png
      - images/type_channelgs.png
      - images/type_channelplane.png
      - images/type_channeltrain.png
      - images/type_cruise.png
      - images/type_district.png
      - images/type_food.png
      - images/type_hotel.png
      - images/type_huodong.png
      - images/type_shop.png
      - images/type_sight.png
      - images/type_ticket.png
      - images/type_travelgroup.png
      - images/head.jpeg
      - images/bubble.png
      - images/logo_lockup_flutter_vertical.png
      - images/logo_lockup_flutter_vertical_wht.png
      - images/splash.png
      - images/ic_theme.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Canterbury
      fonts:
        - asset: fonts/Canterbury.ttf

    - family: HelloStockholm
      fonts:
        - asset: fonts/HelloStockholm.otf

    - family: Horizon
      fonts:
        - asset: fonts/Horizon.otf

    - family: Bobbers
      fonts:
        - asset: fonts/Bobbers.ttf

    - family: Agne
      fonts:
        - asset: fonts/Agne.otf
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  # 配置启动图
flutter_native_splash:
  color: "#e1f5fe"
  color_dark: "#042a49"
  image: images/logo_lockup_flutter_vertical.png
  image_dark: images/logo_lockup_flutter_vertical_wht.png
    #background_image: "assets/background.png"
    #background_image_dark: "assets/dark-background.png"

    #The android, ios and web parameters can be used to disable generating a splash screen on a given platform
    #android: false
    #ios: false
    #web: false
    # The position of the splash image can be set with android_gravity, ios_content_mode, and
    # web_image_mode parameters.  All default to center.
    #
    # android_gravity can be one of the following Android Gravity (see
    # https://developer.android.com/reference/android/view/Gravity): bottom, center,
    # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
    # fill_vertical, left, right, start, or top.
    #android_gravity: center
    #
    # ios_content_mode can be one of the following iOS UIView.ContentMode (see
    # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
    # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
    # bottomLeft, or bottomRight.
    #ios_content_mode: center
    #
    # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
    #web_image_mode: center

    # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
    # has no notification bar.  Defaults to false.
    # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
    #       To show the notification bar, add the following code to your Flutter app:
    #       WidgetsFlutterBinding.ensureInitialized();
    #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  fullscreen: true

   # To enable support for Android 12, set the following parameter to true.  Defaults to false.
   #android12: true
#  注：iOS端在Xcode工程中选中LaunchScreen:
#    storyboard，关联UIImageView和刚刚生成的图片，如果有需要调整UIImageView的布局。```:

flutter_intl:
  enabled: true
